USE [ERPXL_TEST_TROP]
GO
/****** Object:  Trigger [CDN].[ITA_Obliczanie_Ceny_Allegro_dla_SP]    Script Date: 21.07.2023 11:36:54 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
-- =====================================================================================================================================--
-- Author:		Patryk Kamiński																											--
-- Create date:		20.07.2023																											--
-- Description:		Mechanizm wyliczający cenę ALLEGRO dla towarów ze składu podatkowego, uwzględniając Akcyzę oraz doliczając marżę	--
-- =====================================================================================================================================--
*/

ALTER TRIGGER [CDN].[ITA_Obliczanie_Ceny_Allegro_dla_SP]

ON [CDN].[TraNag]

FOR INSERT, UPDATE

AS

	BEGIN
	SET NOCOUNT ON

				IF EXISTS ( SELECT * FROM inserted WHERE TrN_Stan = 5  and TrN_GIDTyp IN (1489, 1490) and TrN_TrNSeria ='SP' and TrN_MagDNumer = 18 )
		
				AND EXISTS ( select * from inserted 
							join cdn.frmstruktura as ope on ope.frs_gidtyp = TrN_OpeTypM and ope.frs_gidnumer = TrN_OpeNumerM
							join cdn.frmstruktura as cntr on cntr.frs_gidtyp = ope.frs_grotyp and cntr.frs_gidnumer = ope.frs_gronumer
							where cntr.frs_nazwa = 'Skład Podatkowy' )

					
							BEGIN
						
								-- 1 część dla składu podatkowego --

								declare @czas datetime
								set @czas = GETDATE()

										declare ALSP cursor local forward_only for

										SELECT 
										TrE_TwrNumer as Towar, 
										ROUND(((TrE_Poczatkowa +(Twr_Waga * 1.18))*(cast((sp.Atr_Wartosc+100)as decimal(15,2))/100)),2) as CenaZ, 
										(Twr_StawkaPodSpr + 100)/100 as vatS 
										FROM CDN.TraElem
										join inserted on TrN_GIDTyp=TrE_GIDTyp AND TrN_GIDNumer=TrE_GIDNumer
										join CDN.TwrKarty on Twr_GIDNumer=TrE_TwrNumer
										join CDN.Atrybuty sp on TrE_TwrNumer = sp.Atr_obinumer and sp.Atr_ObiTyp = TrE_TwrTyp and sp.Atr_AtkId = 78

										open ALSP

										declare @Towar int, @CenaZ decimal(15,8), @vatS decimal(15,8)
										fetch next from ALSP into @Towar, @CenaZ, @vatS
										WHILE @@FETCH_STATUS=0

													BEGIN

														update CDN.TwrCeny
														set TwC_Wartosc = ROUND((@CenaZ*@vatS),2), TwC_CzasModyfikacji = cdn.DateToTS(@czas)
														where TwC_TwrNumer = @Towar and TwC_TwrTyp = 16 and TwC_TwrLp = 8 and TwC_TcnId = 26
														fetch next from ALSP into @Towar, @CenaZ, @vatS

													END
										
										CLOSE ALSP
										DEALLOCATE ALSP

							end

					ELSE IF EXISTS (SELECT * FROM inserted WHERE TrN_Stan = 5 AND TrN_GIDTyp IN (1489, 1490) AND TrN_TrNSeria = 'POZ' AND TrN_MagDNumer = 1)

					
									BEGIN

											-- 2 część dla magazynu POZ--

											DECLARE @procent_marza_poz INT
											SET @procent_marza_poz = 20
	
											DECLARE @marza_poz DECIMAL(15, 2)
											SET @marza_poz = 1 + (@procent_marza_poz / 100.0)
	
											DECLARE @czas_poz DATETIME
											SET @czas_poz = GETDATE()

	
													DECLARE ALPOZ CURSOR LOCAL FORWARD_ONLY FOR
													SELECT 
													TrE_TwrNumer AS TowarPOZ, ROUND((TrE_Poczatkowa * (cast((Atr_Wartosc+100)as decimal(15,2))/100)), 2) AS CenaZPOZ, 
													(Twr_StawkaPodSpr + 100) / 100 AS vatSPOZ 
													FROM CDN.TraElem
													JOIN inserted ON TrN_GIDTyp = TrE_GIDTyp AND TrN_GIDNumer = TrE_GIDNumer
													JOIN CDN.TwrKarty ON Twr_GIDNumer = TrE_TwrNumer
													join CDN.Atrybuty sp on TrE_TwrNumer = sp.Atr_obinumer and sp.Atr_ObiTyp = TrE_TwrTyp and sp.Atr_AtkId = 78
	
													OPEN ALPOZ
	
													DECLARE @TowarPOZ INT, @CenaZPOZ DECIMAL(15, 8), @vatSPOZ DECIMAL(15, 8)
													FETCH NEXT FROM ALPOZ INTO @TowarPOZ, @CenaZPOZ, @vatSPOZ
													WHILE @@FETCH_STATUS = 0

															BEGIN

																UPDATE CDN.TwrCeny
																SET TwC_Wartosc = ROUND((@CenaZPOZ * @vatSPOZ), 2), TwC_CzasModyfikacji = cdn.DateToTS(@czas_poz)
																WHERE TwC_TwrNumer = @TowarPOZ AND TwC_TwrTyp = 16 AND TwC_TwrLp = 8 AND TwC_TcnId = 3
		
																FETCH NEXT FROM ALPOZ INTO @TowarPOZ, @CenaZPOZ, @vatSPOZ
															END

													CLOSE ALPOZ
													DEALLOCATE ALPOZ
	
								end
	end
		
	